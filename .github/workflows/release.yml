name: Build and Release Windows Executable

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name "windows-network" --add-data "src;src" --hidden-import "PyQt6.QtCore" --hidden-import "PyQt6.QtGui" --hidden-import "PyQt6.QtWidgets" --clean main.py
        
    - name: Verify executable creation
      run: |
        if (Test-Path "dist\windows-network.exe") {
          Write-Host "[OK] Executable created successfully"
          Get-Item "dist\windows-network.exe" | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Error "[ERROR] Executable not found"
          exit 1
        }
      shell: powershell
      
    - name: Get version from tag
      id: get_version
      run: |
        if ($env:GITHUB_REF -match "refs/tags/(.*)") {
          $version = $matches[1]
        } else {
          $version = "dev-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Version: $version"
      shell: powershell
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Windows Network Management ${{ steps.get_version.outputs.version }}
        body: |
          ## Windows Network Management Application
          
          ### Downloads
          - **windows-network.exe** - Standalone Windows executable (no Python installation required)
          
          ### Installation
          1. Download `windows-network.exe`
          2. Run the executable directly on any Windows machine
          3. No additional dependencies required
          
          ### Features
          - Network scanning capabilities
          - Device connection management
          - User-friendly GUI interface
          - Settings configuration
          
          ### System Requirements
          - Windows 10 or later
          - No Python installation required
          
          ---
          *Built with PyQt6 and compiled using PyInstaller*
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/windows-network.exe
        asset_name: windows-network.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-network-executable
        path: dist/windows-network.exe
        retention-days: 30